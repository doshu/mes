<?php

	$source = 'from.csv';
	$sourceProduct = array();
	
	$destHeader = explode(',', 'sku,_store,_attribute_set,_type,_category,_root_category,_product_websites,cartella_colori,bordo,interni,color,cost,country_of_manufacture,created_at,custom_design,custom_design_from,custom_design_to,custom_layout_update,description,enable_googlecheckout,gallery,gift_message_available,has_options,image,image_label,manufacturer,media_gallery,meta_description,meta_keyword,meta_title,minimal_price,msrp,msrp_display_actual_price_type,msrp_enabled,name,news_from_date,news_to_date,options_container,page_layout,price,required_options,short_description,small_image,small_image_label,special_from_date,special_price,special_to_date,status,tax_class_id,thumbnail,thumbnail_label,updated_at,url_key,url_path,visibility,weight,qty,min_qty,use_config_min_qty,is_qty_decimal,backorders,use_config_backorders,min_sale_qty,use_config_min_sale_qty,max_sale_qty,use_config_max_sale_qty,is_in_stock,notify_stock_qty,use_config_notify_stock_qty,manage_stock,use_config_manage_stock,stock_status_changed_auto,use_config_qty_increments,qty_increments,use_config_enable_qty_inc,enable_qty_increments,is_decimal_divided,_links_related_sku,_links_related_position,_links_crosssell_sku,_links_crosssell_position,_links_upsell_sku,_links_upsell_position,_associated_sku,_associated_default_qty,_associated_position,_tier_price_website,_tier_price_customer_group,_tier_price_qty,_tier_price_price,_group_price_website,_group_price_customer_group,_group_price_price,_media_attribute_id,_media_image,_media_lable,_media_position,_media_is_disabled,_custom_option_store,_custom_option_type,_custom_option_title,_custom_option_is_required,_custom_option_price,_custom_option_sku,_custom_option_max_characters,_custom_option_sort_order,_custom_option_row_title,_custom_option_row_price,_custom_option_row_sku,_custom_option_row_sort');
	
	$enterMatrixIndex = 0;
	
	//echo count($destHeader); exit;
	$dest = 'to_%s.csv';
	
	function strcat() {
		$str = '';
		foreach(func_get_args() as $e) {
			$str .= $e;
		}
		return $str;
	}
	
	function extractCat($line) {
		//$cats = array('Default Category');
		$cats = array();
		$line = explode('/', $line);
		for($i = 0, $n = count($line); $i < $n; $i++) {
			$tmpLine = array_slice($line, 0, 1+$i);
			$cats[] = implode('/',$tmpLine);			
		}
		return $cats;
	}
	
	function extractSize($line) {
		if(strpos($line, '-') !== false) {
			$line = explode('-', $line);
			return range($line[0], $line[1]);
		}
		elseif(strpos($line, '/') !== false) {
			return explode('/', $line);
		}
		else {
			return array($line);
		}
	}
	
	function extractGroupPrice($line) {
		$out = array();
		$gps = explode("\n", $line);
		foreach($gps as $gp) {
			
			list($id, $price) = explode('/', $gp);
			$out[$id] = $price;
		}
		return $out;
	}
	
	function getSourceProducts($file) {
		$fp = fopen($file, 'r');
		$products = array();
		fgetcsv($fp); //strip header
		while($line = fgetcsv($fp)) {
			$tmpProd = array();
			$tmpProd['sku'] = $line[0];
			$tmpProd['cat'] = extractCat($line[1]);
			$tmpProd['size'] = extractSize($line[2]);
			$tmpProd['desc']['ita'] = trim($line[3]);
			$tmpProd['desc']['eng'] = trim($line[4]);
			$tmpProd['img'] = explode('/', $line[5]);
			$tmpProd['name'] = trim($line[6]);
			$tmpProd['price'] = trim($line[7]);
			$tmpProd['urlkey'] = strtolower(trim($line[8]));
			$tmpProd['urlpath'] = strtolower(trim($line[9]));
			$tmpProd['related'] = explode(' ', $line[10]);
			$tmpProd['group_price'] = extractGroupPrice($line[11]);
			$tmpProd['color'] = explode('/', $line[12]);
			
			$products[] = $tmpProd;
		}
		
		return $products;
	}
	
	/*
	function getPriceDiff($that, $other) {
		foreach($that as $id => $price) {
			$that[$id] = -($price - $other[$id]);
		}
		return $that;
	}
	
	
	function checkSizePrice($parsed) {
		$new = array();
		for($i = 0; $i < count($parsed); $i++) {
			if($parsed[$i]) {
				for($j = 0; $j < count($parsed); $j++) {
					if($parsed[$j] && $parsed[$i]['sku'] == $parsed[$j]['sku'] && $i != $j) {
						if(!isset($parsed[$i]['size'][$parsed[$j]['size'][0]]) && !in_array($parsed[$j]['size'][0], $parsed[$j]['size'])) {
							$parsed[$i]['size'][$parsed[$j]['size'][0]] = getPriceDiff($parsed[$i]['group_price'], $parsed[$j]['group_price']);				
							$parsed[$j] = null;
						}
					}
				}
				$new[] = $parsed[$i];
			}
		}
		
		for($i = 0; $i < count($new); $i++) {
			
		}
		
		return $new;
	}
	*/
	
	function checkSizeDup($parsed) {
		$dup = array();
		$tmp = $parsed;
		for($i = 0; $i < count($tmp); $i++) {
			for($j = 0; $j < count($tmp); $j++) {
				if($tmp[$i]['sku'] == $tmp[$j]['sku'] && $i != $j) {
					$dup[] = $tmp[$i]['sku'];
				}
			}
		}
		
		$dup = array_unique($dup);
		for($i = 0; $i < count($parsed); $i++) {
			if(in_array($parsed[$i]['sku'], $dup)) {
				$parsed[$i]['sku'] = $parsed[$i]['sku'].'_'.$parsed[$i]['size'][0];
				$parsed[$i]['name'] = $parsed[$i]['name'].' '.$parsed[$i]['size'][0];
			}			
		}
		
		return $parsed;
	}
	
	
	$parsed = getSourceProducts($source);
	$parsed = checkSizeDup($parsed);
	//$parsed = checkSizePrice($parsed);
	
	//print_r($parsed); 
	//exit;
	
	$splitFile = 0;
	
	//$out = fopen(sprintf($dest, $splitFile), 'w');
	//fputcsv($out, $destHeader);
	
	
	function enterMatrix($matrix, $pos, $el) {
		global $enterMatrixIndex;
		$pos = $enterMatrixIndex;
		$enterMatrixIndex++;
		
		if(!is_array($el)) {
			if(!isset($matrix[0]) || !is_array($matrix[0])) {
				$matrix[0] = array();
			}
			$matrix[0][$pos] = $el;
		}
		else {
			$i = 0;
			foreach($el as $e) {
				if(!isset($matrix[$i]) || !is_array($matrix[$i])) {
					$matrix[$i] = array();
				}
				if($e !== null)
					$matrix[$i][$pos] = $e;
				$i++;
			}
		}
		
		return $matrix;
	}
	
	$splitCount = 0;
	
	foreach($parsed as $p) {
		$enterMatrixIndex = 0;
		
		if($splitCount == 0) {
			if(isset($out)) {
				fclose($out);
			}
			$out = fopen(sprintf($dest, $splitFile), 'w');
			fputcsv($out, $destHeader);
		}
		
		$matrix = array();
		$matrix = enterMatrix($matrix, 0, $p['sku']);
		$matrix = enterMatrix($matrix, 1, array('', 'italiano'));
		$matrix = enterMatrix($matrix, 2, 'Default');
		$matrix = enterMatrix($matrix, 3, 'simple');
		$matrix = enterMatrix($matrix, 4, $p['cat']);
		$matrix = enterMatrix($matrix, 5, array_fill(0, count($p['cat']), 'Default Category'));
		$matrix = enterMatrix($matrix, 6, 'base');
		if(count($p['color']) == 2) {
			$tmpColor = $p['color'][0];
			$tmpBorder = $p['color'][1];
			$tmpInterior = '';
		}
		elseif(count($p['color']) == 1 && $p['color'][0] == '6') {
			$tmpColor = $p['color'][0];
			$tmpBorder = '6bis';
			$tmpInterior = '';
		}
		elseif(count($p['color']) == 1 && $p['color'][0] == '5') {
			$tmpColor = '5bis';
			$tmpBorder = '';
			$tmpInterior = $p['color'][0];
		}
		else {
			$tmpColor = $p['color'];
			$tmpBorder = '';
			$tmpInterior = '';
		}
		$matrix = enterMatrix($matrix, 7, $tmpColor);
		$matrix = enterMatrix($matrix, 7, $tmpBorder);
		$matrix = enterMatrix($matrix, 7, $tmpInterior);
		$matrix = enterMatrix($matrix, 8, '');
		$matrix = enterMatrix($matrix, 9, '');
		$matrix = enterMatrix($matrix, 10, '');
		$matrix = enterMatrix($matrix, 11, date('Y-m-d H:i:s'));
		$matrix = enterMatrix($matrix, 12, '');
		$matrix = enterMatrix($matrix, 13, '');
		$matrix = enterMatrix($matrix, 14, '');
		$matrix = enterMatrix($matrix, 15, '');
		$matrix = enterMatrix($matrix, 16, !empty($p['desc']['eng']) || !empty($p['desc']['ita'])?array($p['desc']['eng'], $p['desc']['ita']):$p['name']);
		$matrix = enterMatrix($matrix, 17, 0);
		$matrix = enterMatrix($matrix, 18, '');
		$matrix = enterMatrix($matrix, 19, '');
		$matrix = enterMatrix($matrix, 20, 1);
		$matrix = enterMatrix($matrix, 21, !empty($p['img'][0])?strcat($p['img'][0].'.jpg'):'');
		$matrix = enterMatrix($matrix, 22, '');
		$matrix = enterMatrix($matrix, 23, '');
		$matrix = enterMatrix($matrix, 24, '');
		$matrix = enterMatrix($matrix, 25, ''/*array($p['desc']['eng'], $p['desc']['ita'])*/);
		$matrix = enterMatrix($matrix, 26, '');
		$matrix = enterMatrix($matrix, 27, $p['name']);
		$matrix = enterMatrix($matrix, 28, '');
		$matrix = enterMatrix($matrix, 29, '');
		$matrix = enterMatrix($matrix, 30, 'Usa Config');
		$matrix = enterMatrix($matrix, 31, 'Usa Config');
		$matrix = enterMatrix($matrix, 32, $p['name']);
		$matrix = enterMatrix($matrix, 33, '');
		$matrix = enterMatrix($matrix, 34, '');
		$matrix = enterMatrix($matrix, 35, 'Blocco dopo info colonna');
		$matrix = enterMatrix($matrix, 36, '');
		$matrix = enterMatrix($matrix, 37, max($p['group_price']));
		$matrix = enterMatrix($matrix, 38, 1); //required options
		$matrix = enterMatrix($matrix, 39, !empty($p['desc']['eng']) || !empty($p['desc']['ita'])?array($p['desc']['eng'], $p['desc']['ita']):$p['name']);
		$matrix = enterMatrix($matrix, 40, !empty($p['img'][0])?strcat($p['img'][0].'.jpg'):'');
		$matrix = enterMatrix($matrix, 41, '');
		$matrix = enterMatrix($matrix, 42, '');
		$matrix = enterMatrix($matrix, 43, '');
		$matrix = enterMatrix($matrix, 44, '');
		$matrix = enterMatrix($matrix, 45, 1);
		$matrix = enterMatrix($matrix, 46, 2);
		$matrix = enterMatrix($matrix, 47, !empty($p['img'][0])?strcat($p['img'][0].'.jpg'):'');
		$matrix = enterMatrix($matrix, 48, '');
		$matrix = enterMatrix($matrix, 49, date('Y-m-d H:i:s'));
		$matrix = enterMatrix($matrix, 50, $p['urlkey']);
		$matrix = enterMatrix($matrix, 51, $p['urlpath']);
		$matrix = enterMatrix($matrix, 52, 4);
		$matrix = enterMatrix($matrix, 53, 0);
		$matrix = enterMatrix($matrix, 54, 0);
		$matrix = enterMatrix($matrix, 55, 0);
		$matrix = enterMatrix($matrix, 56, 1);
		$matrix = enterMatrix($matrix, 57, 0);
		$matrix = enterMatrix($matrix, 58, 0);
		$matrix = enterMatrix($matrix, 59, 1);
		$matrix = enterMatrix($matrix, 60, 1);
		$matrix = enterMatrix($matrix, 61, 1);
		$matrix = enterMatrix($matrix, 62, 0);
		$matrix = enterMatrix($matrix, 63, 1);
		$matrix = enterMatrix($matrix, 64, 0);
		$matrix = enterMatrix($matrix, 65, '');
		$matrix = enterMatrix($matrix, 66, 1);
		$matrix = enterMatrix($matrix, 67, 0);
		$matrix = enterMatrix($matrix, 68, 0);
		$matrix = enterMatrix($matrix, 69, 1);
		$matrix = enterMatrix($matrix, 70, 1);
		$matrix = enterMatrix($matrix, 71, 0);
		$matrix = enterMatrix($matrix, 72, 1);
		$matrix = enterMatrix($matrix, 73, 0);
		$matrix = enterMatrix($matrix, 74, 0);
		$matrix = enterMatrix($matrix, 75, $p['related']);
		$matrix = enterMatrix($matrix, 76, '');
		$matrix = enterMatrix($matrix, 77, '');
		$matrix = enterMatrix($matrix, 78, '');
		$matrix = enterMatrix($matrix, 79, '');
		$matrix = enterMatrix($matrix, 80, '');
		$matrix = enterMatrix($matrix, 81, '');
		$matrix = enterMatrix($matrix, 82, '');
		$matrix = enterMatrix($matrix, 83, '');
		$matrix = enterMatrix($matrix, 84, '');
		$matrix = enterMatrix($matrix, 85, '');
		$matrix = enterMatrix($matrix, 86, '');
		$matrix = enterMatrix($matrix, 87, '');
		$matrix = enterMatrix($matrix, 88, array_fill(0, count($p['group_price']), 'all'));
		$matrix = enterMatrix($matrix, 89, array_keys($p['group_price']));
		$matrix = enterMatrix($matrix, 90, $p['group_price']);
		$matrix = enterMatrix($matrix, 91, array_fill(0, count($p['img']), 88));
		$matrix = enterMatrix($matrix, 92, array_map(function($el) { return $el?$el.'.jpg':null; }, $p['img']));
		$matrix = enterMatrix($matrix, 93, '');
		$matrix = enterMatrix($matrix, 94, range(1, count($p['img'])));
		$matrix = enterMatrix($matrix, 95, array_fill(0, count($p['img']), 0));
		$matrix = enterMatrix($matrix, 96,  array_merge(array_fill(0, count($p['size']), ''), array('italiano')));
		$matrix = enterMatrix($matrix, 97, 'drop_down');
		$matrix = enterMatrix($matrix, 98,  array_merge(array('Size'), count($p['size'])>1?array_fill(0, count($p['size'])-1, ''):array(), array('Taglia')));
		$matrix = enterMatrix($matrix, 99, 1);
		$matrix = enterMatrix($matrix, 100, '');
		$matrix = enterMatrix($matrix, 101, '');
		$matrix = enterMatrix($matrix, 102, '');
		$matrix = enterMatrix($matrix, 103, 0);
		$matrix = enterMatrix($matrix, 104, $p['size']);
		$matrix = enterMatrix($matrix, 105, '');
		$matrix = enterMatrix($matrix, 106, '');
		$matrix = enterMatrix($matrix, 107, 0);
		
		
		foreach($matrix as $line) {
			fputcsv($out, normalizeLine($line));
		}
		
		$splitCount++;
		if($splitCount > 199) {
			$splitCount = 0;
			$splitFile++;
		}
	}
	
	function normalizeLine($line) {
		$new = array();
		$i = 0;
		foreach($line as $k => $v) {
			for($j = $i; $j < $k; $j++) {
				$new[$j] = '';
			} 
			$new[$k] = $v;
			$i = $k+1;
		}
		return $new;
	}

	
?>
